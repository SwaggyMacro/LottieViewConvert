# .github/workflows/build-and-release-rezip.yml
name: Build and Release (Separate Jobs with Re‑zip)

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }} / ${{ matrix.runtime }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            runtime: linux-x64
          - os: ubuntu-latest
            runtime: linux-arm64
          - os: macos-latest
            runtime: osx-x64
          - os: macos-latest
            runtime: osx-arm64
          - os: windows-latest
            runtime: win-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          include-prerelease: true

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish for ${{ matrix.runtime }}
        run: |
          dotnet publish LottieViewConvert/LottieViewConvert.csproj \
            -c Release \
            -f net8.0 \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            -p:UseAppHost=true \
            -p:PublishTrimmed=true \
            -p:PublishReadyToRun=true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:IncludeAllContentForSelfExtract=true \
            -o artifacts/${{ matrix.runtime }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runtime }}
          path: artifacts/${{ matrix.runtime }}/*

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten and Re‑zip per runtime
        run: |
          cd artifacts
          for dir in */ ; do
            zip -r "${dir%/}.zip" "$dir"
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release-${{ github.ref_name }}
          files: artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
